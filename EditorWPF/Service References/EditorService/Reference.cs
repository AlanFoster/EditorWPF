//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.32559
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EditorWPF.EditorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/EditorServices.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Bitmap BitmapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Bitmap Bitmap {
            get {
                return this.BitmapField;
            }
            set {
                if ((object.ReferenceEquals(this.BitmapField, value) != true)) {
                    this.BitmapField = value;
                    this.RaisePropertyChanged("Bitmap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EditorService.IEditorService")]
    public interface IEditorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/AddImage", ReplyAction="http://tempuri.org/IEditorService/AddImageResponse")]
        void AddImage(EditorWPF.EditorService.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/AddImage", ReplyAction="http://tempuri.org/IEditorService/AddImageResponse")]
        System.Threading.Tasks.Task AddImageAsync(EditorWPF.EditorService.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/GetImages", ReplyAction="http://tempuri.org/IEditorService/GetImagesResponse")]
        EditorWPF.EditorService.Image[] GetImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/GetImages", ReplyAction="http://tempuri.org/IEditorService/GetImagesResponse")]
        System.Threading.Tasks.Task<EditorWPF.EditorService.Image[]> GetImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/RemoveImage", ReplyAction="http://tempuri.org/IEditorService/RemoveImageResponse")]
        void RemoveImage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEditorService/RemoveImage", ReplyAction="http://tempuri.org/IEditorService/RemoveImageResponse")]
        System.Threading.Tasks.Task RemoveImageAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEditorServiceChannel : EditorWPF.EditorService.IEditorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EditorServiceClient : System.ServiceModel.ClientBase<EditorWPF.EditorService.IEditorService>, EditorWPF.EditorService.IEditorService {
        
        public EditorServiceClient() {
        }
        
        public EditorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EditorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EditorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddImage(EditorWPF.EditorService.Image image) {
            base.Channel.AddImage(image);
        }
        
        public System.Threading.Tasks.Task AddImageAsync(EditorWPF.EditorService.Image image) {
            return base.Channel.AddImageAsync(image);
        }
        
        public EditorWPF.EditorService.Image[] GetImages() {
            return base.Channel.GetImages();
        }
        
        public System.Threading.Tasks.Task<EditorWPF.EditorService.Image[]> GetImagesAsync() {
            return base.Channel.GetImagesAsync();
        }
        
        public void RemoveImage(int id) {
            base.Channel.RemoveImage(id);
        }
        
        public System.Threading.Tasks.Task RemoveImageAsync(int id) {
            return base.Channel.RemoveImageAsync(id);
        }
    }
}
